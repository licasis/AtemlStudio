
LCDDriver4BitInterface.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000003f8  0000048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800106  00800106  00000492  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000494  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  00000b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000bf7  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000a0  00000000  00000000  00000c26  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000b8b  00000000  00000000  00000cc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005b6  00000000  00000000  00001851  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000709  00000000  00000000  00001e07  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000120  00000000  00000000  00002510  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004a8  00000000  00000000  00002630  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000068a  00000000  00000000  00002ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000070  00000000  00000000  00003162  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a6 e0       	ldi	r26, 0x06	; 6
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	ac 30       	cpi	r26, 0x0C	; 12
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e8 ef       	ldi	r30, 0xF8	; 248
  b0:	f3 e0       	ldi	r31, 0x03	; 3
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a6 30       	cpi	r26, 0x06	; 6
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>
  c2:	32 d0       	rcall	.+100    	; 0x128 <main>
  c4:	97 c1       	rjmp	.+814    	; 0x3f4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_ZN11LCD1602Half10_init_PORTEv>:
{
	m_RW = 1;
	m_RS = 0;
		
	return true;
}
  c8:	fc 01       	movw	r30, r24
  ca:	12 82       	std	Z+2, r1	; 0x02
  cc:	11 82       	std	Z+1, r1	; 0x01
  ce:	10 82       	st	Z, r1
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	82 b9       	out	0x02, r24	; 2
  d4:	13 b8       	out	0x03, r1	; 3
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	08 95       	ret

000000da <_ZN11LCD1602HalfC1Ev>:
  da:	f6 cf       	rjmp	.-20     	; 0xc8 <_ZN11LCD1602Half10_init_PORTEv>
  dc:	08 95       	ret

000000de <_ZN11LCD1602Half6_pulseEh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	8f e3       	ldi	r24, 0x3F	; 63
  e0:	9c e9       	ldi	r25, 0x9C	; 156
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <_ZN11LCD1602Half6_pulseEh+0x4>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <_ZN11LCD1602Half6_pulseEh+0xa>
  e8:	00 00       	nop


void LCD1602Half::_pulse(uint8_t data)
{
	PULSE_DELAY_FUNCTION(PULSE_PERIOD);
	DATA_PORT = data | 1<<E_PIN;
  ea:	86 2f       	mov	r24, r22
  ec:	80 68       	ori	r24, 0x80	; 128
  ee:	83 b9       	out	0x03, r24	; 3
  f0:	8f e3       	ldi	r24, 0x3F	; 63
  f2:	9c e9       	ldi	r25, 0x9C	; 156
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <_ZN11LCD1602Half6_pulseEh+0x16>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <_ZN11LCD1602Half6_pulseEh+0x1c>
  fa:	00 00       	nop
	PULSE_DELAY_FUNCTION(PULSE_PERIOD);
	DATA_PORT = data;
  fc:	63 b9       	out	0x03, r22	; 3
  fe:	08 95       	ret

00000100 <_ZN11LCD1602Half22_output_half_high_byteEh>:
}

bool LCD1602Half::_output_half_high_byte(uint8_t data)
{
	uint8_t temp;
	temp = ( (m_RW<<RW_PIN) | (m_RS<<RS_PIN) ) | ((data & 0xF0)>>4);
 100:	fc 01       	movw	r30, r24
 102:	40 81       	ld	r20, Z
 104:	f0 e2       	ldi	r31, 0x20	; 32
 106:	4f 9f       	mul	r20, r31
 108:	a0 01       	movw	r20, r0
 10a:	11 24       	eor	r1, r1
 10c:	fc 01       	movw	r30, r24
 10e:	21 81       	ldd	r18, Z+1	; 0x01
 110:	f0 e4       	ldi	r31, 0x40	; 64
 112:	2f 9f       	mul	r18, r31
 114:	90 01       	movw	r18, r0
 116:	11 24       	eor	r1, r1
 118:	24 2b       	or	r18, r20
 11a:	62 95       	swap	r22
 11c:	6f 70       	andi	r22, 0x0F	; 15
 11e:	62 2b       	or	r22, r18
	DATA_PORT = temp;
 120:	63 b9       	out	0x03, r22	; 3
	_pulse(temp);
 122:	dd df       	rcall	.-70     	; 0xde <_ZN11LCD1602Half6_pulseEh>
	return true;
}
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	08 95       	ret

00000128 <main>:
#include <avr/io.h>
#include "LCD1602Half.h"
int main(void)
{
	uint8_t temp = 0xF0;
	DDRA = 0xFF;
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	8a bb       	out	0x1a, r24	; 26
	PORTA = temp;
 12c:	80 ef       	ldi	r24, 0xF0	; 240
 12e:	8b bb       	out	0x1b, r24	; 27
	PORTA = temp>>1;
 130:	98 e7       	ldi	r25, 0x78	; 120
 132:	9b bb       	out	0x1b, r25	; 27
	PORTA = temp>>2;
 134:	9c e3       	ldi	r25, 0x3C	; 60
 136:	9b bb       	out	0x1b, r25	; 27
	PORTA = temp>>3;
 138:	9e e1       	ldi	r25, 0x1E	; 30
 13a:	9b bb       	out	0x1b, r25	; 27
	PORTA = temp>>4;
 13c:	9f e0       	ldi	r25, 0x0F	; 15
 13e:	9b bb       	out	0x1b, r25	; 27
	PORTA = temp>>5;
 140:	97 e0       	ldi	r25, 0x07	; 7
 142:	9b bb       	out	0x1b, r25	; 27
	temp = 0b10111000;
	PORTA = (temp & 0xF0)>>4;
 144:	9b e0       	ldi	r25, 0x0B	; 11
 146:	9b bb       	out	0x1b, r25	; 27
	
	PORTA = 0xF0;
 148:	8b bb       	out	0x1b, r24	; 27
private:
public:
	~LCD1602Half();
	static LCD1602Half * getInstance()
	{
		if (m_pInstance == NULL)
 14a:	80 91 06 01 	lds	r24, 0x0106
 14e:	90 91 07 01 	lds	r25, 0x0107
 152:	89 2b       	or	r24, r25
 154:	51 f4       	brne	.+20     	; 0x16a <main+0x42>
		}
		return m_pInstance;
	}
	void * operator new(size_t size)
	{
		return malloc(size);
 156:	83 e0       	ldi	r24, 0x03	; 3
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	12 d0       	rcall	.+36     	; 0x180 <malloc>
 15c:	d8 2f       	mov	r29, r24
 15e:	c9 2f       	mov	r28, r25
	~LCD1602Half();
	static LCD1602Half * getInstance()
	{
		if (m_pInstance == NULL)
		{
			m_pInstance = new LCD1602Half();
 160:	bc df       	rcall	.-136    	; 0xda <_ZN11LCD1602HalfC1Ev>
 162:	d0 93 06 01 	sts	0x0106, r29
 166:	c0 93 07 01 	sts	0x0107, r28
		}
		return m_pInstance;
 16a:	80 91 06 01 	lds	r24, 0x0106
 16e:	90 91 07 01 	lds	r25, 0x0107
	{
		free(ptr);
	}
	void test1()
	{
		m_RS = 1;
 172:	21 e0       	ldi	r18, 0x01	; 1
 174:	fc 01       	movw	r30, r24
 176:	20 83       	st	Z, r18
		m_RW = 1;
 178:	21 83       	std	Z+1, r18	; 0x01
		_output_half_high_byte(0b10101100);
 17a:	6c ea       	ldi	r22, 0xAC	; 172
 17c:	c1 df       	rcall	.-126    	; 0x100 <_ZN11LCD1602Half22_output_half_high_byteEh>
 17e:	ff cf       	rjmp	.-2      	; 0x17e <main+0x56>

00000180 <malloc>:
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	82 30       	cpi	r24, 0x02	; 2
 18a:	91 05       	cpc	r25, r1
 18c:	10 f4       	brcc	.+4      	; 0x192 <malloc+0x12>
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	e0 91 0a 01 	lds	r30, 0x010A
 196:	f0 91 0b 01 	lds	r31, 0x010B
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	c0 e0       	ldi	r28, 0x00	; 0
 1a0:	d0 e0       	ldi	r29, 0x00	; 0
 1a2:	23 c0       	rjmp	.+70     	; 0x1ea <malloc+0x6a>
 1a4:	40 81       	ld	r20, Z
 1a6:	51 81       	ldd	r21, Z+1	; 0x01
 1a8:	48 17       	cp	r20, r24
 1aa:	59 07       	cpc	r21, r25
 1ac:	a8 f0       	brcs	.+42     	; 0x1d8 <malloc+0x58>
 1ae:	48 17       	cp	r20, r24
 1b0:	59 07       	cpc	r21, r25
 1b2:	61 f4       	brne	.+24     	; 0x1cc <malloc+0x4c>
 1b4:	82 81       	ldd	r24, Z+2	; 0x02
 1b6:	93 81       	ldd	r25, Z+3	; 0x03
 1b8:	20 97       	sbiw	r28, 0x00	; 0
 1ba:	19 f0       	breq	.+6      	; 0x1c2 <malloc+0x42>
 1bc:	9b 83       	std	Y+3, r25	; 0x03
 1be:	8a 83       	std	Y+2, r24	; 0x02
 1c0:	2e c0       	rjmp	.+92     	; 0x21e <malloc+0x9e>
 1c2:	90 93 0b 01 	sts	0x010B, r25
 1c6:	80 93 0a 01 	sts	0x010A, r24
 1ca:	29 c0       	rjmp	.+82     	; 0x21e <malloc+0x9e>
 1cc:	21 15       	cp	r18, r1
 1ce:	31 05       	cpc	r19, r1
 1d0:	29 f0       	breq	.+10     	; 0x1dc <malloc+0x5c>
 1d2:	42 17       	cp	r20, r18
 1d4:	53 07       	cpc	r21, r19
 1d6:	10 f0       	brcs	.+4      	; 0x1dc <malloc+0x5c>
 1d8:	a9 01       	movw	r20, r18
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <malloc+0x60>
 1dc:	be 01       	movw	r22, r28
 1de:	df 01       	movw	r26, r30
 1e0:	02 81       	ldd	r16, Z+2	; 0x02
 1e2:	13 81       	ldd	r17, Z+3	; 0x03
 1e4:	ef 01       	movw	r28, r30
 1e6:	9a 01       	movw	r18, r20
 1e8:	f8 01       	movw	r30, r16
 1ea:	30 97       	sbiw	r30, 0x00	; 0
 1ec:	d9 f6       	brne	.-74     	; 0x1a4 <malloc+0x24>
 1ee:	21 15       	cp	r18, r1
 1f0:	31 05       	cpc	r19, r1
 1f2:	09 f1       	breq	.+66     	; 0x236 <malloc+0xb6>
 1f4:	28 1b       	sub	r18, r24
 1f6:	39 0b       	sbc	r19, r25
 1f8:	24 30       	cpi	r18, 0x04	; 4
 1fa:	31 05       	cpc	r19, r1
 1fc:	90 f4       	brcc	.+36     	; 0x222 <malloc+0xa2>
 1fe:	12 96       	adiw	r26, 0x02	; 2
 200:	8d 91       	ld	r24, X+
 202:	9c 91       	ld	r25, X
 204:	13 97       	sbiw	r26, 0x03	; 3
 206:	61 15       	cp	r22, r1
 208:	71 05       	cpc	r23, r1
 20a:	21 f0       	breq	.+8      	; 0x214 <malloc+0x94>
 20c:	fb 01       	movw	r30, r22
 20e:	93 83       	std	Z+3, r25	; 0x03
 210:	82 83       	std	Z+2, r24	; 0x02
 212:	04 c0       	rjmp	.+8      	; 0x21c <malloc+0x9c>
 214:	90 93 0b 01 	sts	0x010B, r25
 218:	80 93 0a 01 	sts	0x010A, r24
 21c:	fd 01       	movw	r30, r26
 21e:	32 96       	adiw	r30, 0x02	; 2
 220:	44 c0       	rjmp	.+136    	; 0x2aa <malloc+0x12a>
 222:	fd 01       	movw	r30, r26
 224:	e2 0f       	add	r30, r18
 226:	f3 1f       	adc	r31, r19
 228:	81 93       	st	Z+, r24
 22a:	91 93       	st	Z+, r25
 22c:	22 50       	subi	r18, 0x02	; 2
 22e:	31 09       	sbc	r19, r1
 230:	2d 93       	st	X+, r18
 232:	3c 93       	st	X, r19
 234:	3a c0       	rjmp	.+116    	; 0x2aa <malloc+0x12a>
 236:	20 91 08 01 	lds	r18, 0x0108
 23a:	30 91 09 01 	lds	r19, 0x0109
 23e:	23 2b       	or	r18, r19
 240:	41 f4       	brne	.+16     	; 0x252 <malloc+0xd2>
 242:	20 91 02 01 	lds	r18, 0x0102
 246:	30 91 03 01 	lds	r19, 0x0103
 24a:	30 93 09 01 	sts	0x0109, r19
 24e:	20 93 08 01 	sts	0x0108, r18
 252:	20 91 00 01 	lds	r18, 0x0100
 256:	30 91 01 01 	lds	r19, 0x0101
 25a:	21 15       	cp	r18, r1
 25c:	31 05       	cpc	r19, r1
 25e:	41 f4       	brne	.+16     	; 0x270 <malloc+0xf0>
 260:	2d b7       	in	r18, 0x3d	; 61
 262:	3e b7       	in	r19, 0x3e	; 62
 264:	40 91 04 01 	lds	r20, 0x0104
 268:	50 91 05 01 	lds	r21, 0x0105
 26c:	24 1b       	sub	r18, r20
 26e:	35 0b       	sbc	r19, r21
 270:	e0 91 08 01 	lds	r30, 0x0108
 274:	f0 91 09 01 	lds	r31, 0x0109
 278:	e2 17       	cp	r30, r18
 27a:	f3 07       	cpc	r31, r19
 27c:	a0 f4       	brcc	.+40     	; 0x2a6 <malloc+0x126>
 27e:	2e 1b       	sub	r18, r30
 280:	3f 0b       	sbc	r19, r31
 282:	28 17       	cp	r18, r24
 284:	39 07       	cpc	r19, r25
 286:	78 f0       	brcs	.+30     	; 0x2a6 <malloc+0x126>
 288:	ac 01       	movw	r20, r24
 28a:	4e 5f       	subi	r20, 0xFE	; 254
 28c:	5f 4f       	sbci	r21, 0xFF	; 255
 28e:	24 17       	cp	r18, r20
 290:	35 07       	cpc	r19, r21
 292:	48 f0       	brcs	.+18     	; 0x2a6 <malloc+0x126>
 294:	4e 0f       	add	r20, r30
 296:	5f 1f       	adc	r21, r31
 298:	50 93 09 01 	sts	0x0109, r21
 29c:	40 93 08 01 	sts	0x0108, r20
 2a0:	81 93       	st	Z+, r24
 2a2:	91 93       	st	Z+, r25
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <malloc+0x12a>
 2a6:	e0 e0       	ldi	r30, 0x00	; 0
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	cf 01       	movw	r24, r30
 2ac:	df 91       	pop	r29
 2ae:	cf 91       	pop	r28
 2b0:	1f 91       	pop	r17
 2b2:	0f 91       	pop	r16
 2b4:	08 95       	ret

000002b6 <free>:
 2b6:	ef 92       	push	r14
 2b8:	ff 92       	push	r15
 2ba:	0f 93       	push	r16
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	00 97       	sbiw	r24, 0x00	; 0
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <free+0x12>
 2c6:	8f c0       	rjmp	.+286    	; 0x3e6 <free+0x130>
 2c8:	dc 01       	movw	r26, r24
 2ca:	12 97       	sbiw	r26, 0x02	; 2
 2cc:	13 96       	adiw	r26, 0x03	; 3
 2ce:	1c 92       	st	X, r1
 2d0:	1e 92       	st	-X, r1
 2d2:	12 97       	sbiw	r26, 0x02	; 2
 2d4:	e0 90 0a 01 	lds	r14, 0x010A
 2d8:	f0 90 0b 01 	lds	r15, 0x010B
 2dc:	e1 14       	cp	r14, r1
 2de:	f1 04       	cpc	r15, r1
 2e0:	89 f4       	brne	.+34     	; 0x304 <free+0x4e>
 2e2:	2d 91       	ld	r18, X+
 2e4:	3c 91       	ld	r19, X
 2e6:	11 97       	sbiw	r26, 0x01	; 1
 2e8:	28 0f       	add	r18, r24
 2ea:	39 1f       	adc	r19, r25
 2ec:	80 91 08 01 	lds	r24, 0x0108
 2f0:	90 91 09 01 	lds	r25, 0x0109
 2f4:	82 17       	cp	r24, r18
 2f6:	93 07       	cpc	r25, r19
 2f8:	89 f5       	brne	.+98     	; 0x35c <free+0xa6>
 2fa:	b0 93 09 01 	sts	0x0109, r27
 2fe:	a0 93 08 01 	sts	0x0108, r26
 302:	71 c0       	rjmp	.+226    	; 0x3e6 <free+0x130>
 304:	e7 01       	movw	r28, r14
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	01 c0       	rjmp	.+2      	; 0x30e <free+0x58>
 30c:	ea 01       	movw	r28, r20
 30e:	ca 17       	cp	r28, r26
 310:	db 07       	cpc	r29, r27
 312:	38 f4       	brcc	.+14     	; 0x322 <free+0x6c>
 314:	4a 81       	ldd	r20, Y+2	; 0x02
 316:	5b 81       	ldd	r21, Y+3	; 0x03
 318:	9e 01       	movw	r18, r28
 31a:	41 15       	cp	r20, r1
 31c:	51 05       	cpc	r21, r1
 31e:	b1 f7       	brne	.-20     	; 0x30c <free+0x56>
 320:	22 c0       	rjmp	.+68     	; 0x366 <free+0xb0>
 322:	bc 01       	movw	r22, r24
 324:	62 50       	subi	r22, 0x02	; 2
 326:	71 09       	sbc	r23, r1
 328:	fb 01       	movw	r30, r22
 32a:	d3 83       	std	Z+3, r29	; 0x03
 32c:	c2 83       	std	Z+2, r28	; 0x02
 32e:	00 81       	ld	r16, Z
 330:	11 81       	ldd	r17, Z+1	; 0x01
 332:	ac 01       	movw	r20, r24
 334:	40 0f       	add	r20, r16
 336:	51 1f       	adc	r21, r17
 338:	4c 17       	cp	r20, r28
 33a:	5d 07       	cpc	r21, r29
 33c:	61 f4       	brne	.+24     	; 0x356 <free+0xa0>
 33e:	48 81       	ld	r20, Y
 340:	59 81       	ldd	r21, Y+1	; 0x01
 342:	40 0f       	add	r20, r16
 344:	51 1f       	adc	r21, r17
 346:	4e 5f       	subi	r20, 0xFE	; 254
 348:	5f 4f       	sbci	r21, 0xFF	; 255
 34a:	51 83       	std	Z+1, r21	; 0x01
 34c:	40 83       	st	Z, r20
 34e:	4a 81       	ldd	r20, Y+2	; 0x02
 350:	5b 81       	ldd	r21, Y+3	; 0x03
 352:	53 83       	std	Z+3, r21	; 0x03
 354:	42 83       	std	Z+2, r20	; 0x02
 356:	21 15       	cp	r18, r1
 358:	31 05       	cpc	r19, r1
 35a:	29 f4       	brne	.+10     	; 0x366 <free+0xb0>
 35c:	b0 93 0b 01 	sts	0x010B, r27
 360:	a0 93 0a 01 	sts	0x010A, r26
 364:	40 c0       	rjmp	.+128    	; 0x3e6 <free+0x130>
 366:	f9 01       	movw	r30, r18
 368:	b3 83       	std	Z+3, r27	; 0x03
 36a:	a2 83       	std	Z+2, r26	; 0x02
 36c:	e9 01       	movw	r28, r18
 36e:	69 91       	ld	r22, Y+
 370:	79 91       	ld	r23, Y+
 372:	c6 0f       	add	r28, r22
 374:	d7 1f       	adc	r29, r23
 376:	ac 17       	cp	r26, r28
 378:	bd 07       	cpc	r27, r29
 37a:	79 f4       	brne	.+30     	; 0x39a <free+0xe4>
 37c:	dc 01       	movw	r26, r24
 37e:	5e 91       	ld	r21, -X
 380:	4e 91       	ld	r20, -X
 382:	46 0f       	add	r20, r22
 384:	57 1f       	adc	r21, r23
 386:	4e 5f       	subi	r20, 0xFE	; 254
 388:	5f 4f       	sbci	r21, 0xFF	; 255
 38a:	51 83       	std	Z+1, r21	; 0x01
 38c:	40 83       	st	Z, r20
 38e:	12 96       	adiw	r26, 0x02	; 2
 390:	8d 91       	ld	r24, X+
 392:	9c 91       	ld	r25, X
 394:	13 97       	sbiw	r26, 0x03	; 3
 396:	93 83       	std	Z+3, r25	; 0x03
 398:	82 83       	std	Z+2, r24	; 0x02
 39a:	a0 e0       	ldi	r26, 0x00	; 0
 39c:	b0 e0       	ldi	r27, 0x00	; 0
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <free+0xee>
 3a0:	d7 01       	movw	r26, r14
 3a2:	7c 01       	movw	r14, r24
 3a4:	f7 01       	movw	r30, r14
 3a6:	82 81       	ldd	r24, Z+2	; 0x02
 3a8:	93 81       	ldd	r25, Z+3	; 0x03
 3aa:	00 97       	sbiw	r24, 0x00	; 0
 3ac:	c9 f7       	brne	.-14     	; 0x3a0 <free+0xea>
 3ae:	c7 01       	movw	r24, r14
 3b0:	02 96       	adiw	r24, 0x02	; 2
 3b2:	20 81       	ld	r18, Z
 3b4:	31 81       	ldd	r19, Z+1	; 0x01
 3b6:	82 0f       	add	r24, r18
 3b8:	93 1f       	adc	r25, r19
 3ba:	20 91 08 01 	lds	r18, 0x0108
 3be:	30 91 09 01 	lds	r19, 0x0109
 3c2:	28 17       	cp	r18, r24
 3c4:	39 07       	cpc	r19, r25
 3c6:	79 f4       	brne	.+30     	; 0x3e6 <free+0x130>
 3c8:	10 97       	sbiw	r26, 0x00	; 0
 3ca:	29 f4       	brne	.+10     	; 0x3d6 <free+0x120>
 3cc:	10 92 0b 01 	sts	0x010B, r1
 3d0:	10 92 0a 01 	sts	0x010A, r1
 3d4:	04 c0       	rjmp	.+8      	; 0x3de <free+0x128>
 3d6:	13 96       	adiw	r26, 0x03	; 3
 3d8:	1c 92       	st	X, r1
 3da:	1e 92       	st	-X, r1
 3dc:	12 97       	sbiw	r26, 0x02	; 2
 3de:	f0 92 09 01 	sts	0x0109, r15
 3e2:	e0 92 08 01 	sts	0x0108, r14
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	0f 91       	pop	r16
 3ee:	ff 90       	pop	r15
 3f0:	ef 90       	pop	r14
 3f2:	08 95       	ret

000003f4 <_exit>:
 3f4:	f8 94       	cli

000003f6 <__stop_program>:
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <__stop_program>
